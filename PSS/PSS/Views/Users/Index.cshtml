@model IEnumerable<PSS.Models.User>
@using PSS.Utils.Constants
@using PSS.Utils

@{
    ViewBag.Title = View.Index;
}

<h2>@View.Index</h2>

<p>
    @Html.ActionLink(View.Delete, Actions.Create)
</p>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LastName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Phone)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Birth)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.City)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Phone)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Birth)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.City.Name)
            </td>

            @if (item.Id == Global.User.Id)
            {
                <td>
                    @Html.ActionLink(View.Edit, Actions.Edit, new { id = item.Id }) |
                    @Html.ActionLink(View.Details, Actions.Details, new { id = item.Id }) |
                    @Html.ActionLink(View.Delete, Actions.Delete, new { id = item.Id })
                </td>
            }
            else
            {
                <td>
                    <text>@View.Edit</text> |
                    @Html.ActionLink(View.Details, Actions.Details, new { id = item.Id }) |
                    <text>@View.Delete</text>
                </td>
            }
        </tr>
    }

</table>
